{"version":3,"sources":["webpack://@flamarkt/backoffice/webpack/bootstrap","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/Component']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/app']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/app']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Button']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/Model']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Page']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/components/SessionDropdown']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Navigation']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/Application']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/components/AdminNav']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/components/ExtensionLinkButton']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Placeholder']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/resolvers/DefaultResolver']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/utils/ExtensionData']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['admin/AdminApplication']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/utils/classList']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/helpers/username']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/helpers/highlight']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Separator']\"","webpack://@flamarkt/backoffice/external \"flarum.core.compat['common/components/Switch']\"","webpack://@flamarkt/backoffice/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@flamarkt/backoffice/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flamarkt/backoffice/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flamarkt/backoffice/./src/backoffice/components/HeaderPrimary.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/HeaderSecondary.ts","webpack://@flamarkt/backoffice/./src/common/components/ActiveLinkButton.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/BackofficeNav.ts","webpack://@flamarkt/backoffice/./src/backoffice/pages/DashboardPage.ts","webpack://@flamarkt/backoffice/./src/common/states/AbstractListState.ts","webpack://@flamarkt/backoffice/./src/backoffice/states/UserListState.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/AbstractList.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/UserList.ts","webpack://@flamarkt/backoffice/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@flamarkt/backoffice/./src/common/components/AbstractSortDropdown.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/UserSortDropdown.ts","webpack://@flamarkt/backoffice/./src/backoffice/pages/UserIndexPage.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/SubmitButton.ts","webpack://@flamarkt/backoffice/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@flamarkt/backoffice/./src/common/pages/AbstractShowPage.ts","webpack://@flamarkt/backoffice/./src/backoffice/pages/UserShowPage.ts","webpack://@flamarkt/backoffice/./src/backoffice/resolvers/ExtensionPageResolver.ts","webpack://@flamarkt/backoffice/./src/backoffice/routes.ts","webpack://@flamarkt/backoffice/./src/backoffice/app.ts","webpack://@flamarkt/backoffice/./src/backoffice/BackofficeApplication.ts","webpack://@flamarkt/backoffice/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@flamarkt/backoffice/./src/common/utils/KeyboardNavigatable.ts","webpack://@flamarkt/backoffice/./src/common/components/AbstractRelationshipSelect.ts","webpack://@flamarkt/backoffice/./src/common/components/Sortable.ts","webpack://@flamarkt/backoffice/./src/common/components/SortableHandle.ts","webpack://@flamarkt/backoffice/./src/common/compat.js","webpack://@flamarkt/backoffice/./src/common/components/UserRelationshipSelect.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/PermanentDeleteButton.ts","webpack://@flamarkt/backoffice/./src/backoffice/components/SoftDeleteButton.ts","webpack://@flamarkt/backoffice/./src/backoffice/compat.js","webpack://@flamarkt/backoffice/./src/backoffice/index.ts","webpack://@flamarkt/backoffice/./src/backoffice/addHeaderLinkToAdmin.ts","webpack://@flamarkt/backoffice/./src/backoffice/registerSettings.ts","webpack://@flamarkt/backoffice/./src/backoffice/hideSettingsAndPermissionsIfNotAdmin.ts","webpack://@flamarkt/backoffice/./src/common/registerPatchInitializer.ts","webpack://@flamarkt/backoffice/./src/common/patchModelHasOneNull.ts","webpack://@flamarkt/backoffice/./src/common/patchStoreAllowVerbatimRelationships.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_defineProperties","target","props","length","descriptor","configurable","writable","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","HeaderPrimary","view","listItems","this","items","toArray","ItemList","Component","HeaderSecondary","add","LinkButton","component","href","icon","external","app","translator","trans","SessionDropdown","ActiveLinkButton","isActive","attrs","route","activeRoutes","some","routeName","currentRouteName","current","data","matchAllIndex","indexOf","substr","BackofficeNav","query","oninit","vnode","forum","attribute","type","oninput","event","placeholder","extensions","keys","forEach","id","extension","extra","showInBackoffice","push","extensionItems","map","toUpperCase","title","includes","description","ExtensionLinkButton","extensionId","className","AdminNav","DashboardPage","Page","number","links","AbstractListState","params","pages","loading","moreResults","limit","requestParams","filter","sort","include","q","clear","redraw","refresh","deferClear","loadResults","then","results","parseResults","offset","preloaded","preloadedApiDocument","Promise","resolve","page","store","find","loadMore","nextPageNumber","payload","next","remove","model","index","splice","unshift","UserListState","AbstractList","state","concat","topRow","bottomRowContent","LoadingIndicator","Button","onclick","Placeholder","text","bottomRow","content","colspan","head","row","columns","rowAttrs","actions","UserList","user","email","_extends","assign","arguments","source","apply","AbstractSortDropdown","options","activeSort","Dropdown","buttonClassName","label","active","applySort","defaultSort","param","updateUrl","set","UserSortDropdown","UserIndexPage","list","initState","setTitle","extractText","setTitleCount","SubmitButton","exists","dirty","excluded","sourceKeys","Array","isArray","children","a","disabled","AbstractShowPage","load","newRecord","show","Model","findType","saveThroughNewRecord","attributes","record","pushData","save","reject","UserShowPage","saving","username","password","createRecord","onsubmit","fields","session","preventDefault","error","ExtensionPageResolver","onmatch","args","requestedPath","extensionPage","extensionData","getPage","DefaultResolver","ExtensionData","history","canGoBack","getPrevious","backUrl","back","initializers","routes","self","ReferenceError","dashboard","path","ExtensionPage","resolverClass","Constructor","protoProps","staticProps","mount","defaultRoute","defaultAction","prefix","document","getElementById","Navigation","drawer","getRequiredPermissions","permission","AdminApplication","previous","Application","window","Keys","KeyboardNavigatable","callbacks","Map","whenCallback","onUp","callback","ArrowUp","e","onDown","ArrowDown","onSelect","ignoreTabPress","handler","Tab","Enter","onTab","onCancel","Escape","stopPropagation","onRemove","Backspace","KeyboardEvent","HTMLInputElement","selectionStart","selectionEnd","when","bindTo","$element","addEventListener","navigate","keyCallback","which","AbstractRelationshipSelect","searchFilter","debouncedSearchFilter","searchDebouncer","activeListIndex","inputIsFocused","navigator","dropdownIsFocused","onmousedown","normalizedValue","relationship","setValue","models","hasOne","onchange","setIndex","select","toggleModel","oncreate","element","dom","dropdown","querySelector","contains","onremove","removeEventListener","indexInSelectedModels","findIndex","addModel","removeModel","formItems","listAvailableModels","inputItems","onready","item","clearTimeout","setTimeout","search","onkeydown","onfocus","oninputfocus","onblur","oninputblur","listAvailableModel","classList","selected","onmouseover","getDomElement","dispatchEvent","Event","$","scrollToItem","$dropdown","indexLength","$item","scrollTop","dropdownScroll","dropdownTop","top","dropdownBottom","outerHeight","itemTop","itemBottom","parseInt","css","stop","animate","first","focus","Sortable","sortingIndex","showPlaceholderForIndex","dragoverenterhandler","drophandler","dataTransfer","dropEffect","targetIndex","childNodes","dataset","isNaN","position","getBoundingClientRect","direction","width","middleX","left","pageX","scrollX","height","middleY","pageY","scrollY","origin","destination","onsort","style","display","ondragstart","handleClassName","from","elem","effectAllowed","setData","setDragImage","containerTag","placeholderTag","SortableHandle","draggable","elementTag","common","resultsCache","toLowerCase","all","displayName","arr","lastIndexOf","b","localeCompare","avatar","undefined","highlight","PermanentDeleteButton","isHidden","confirm","afterdelete","SoftDeleteButton","backoffice","extend","has","Separator","registerPermission","override","original","getSettings","vdom","tag","Switch","relationships","verbatim"],"mappings":"qDACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,e,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,c,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,yC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,+B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,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","file":"backoffice.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['admin/components/SessionDropdown'];","module.exports = flarum.core.compat['common/components/Navigation'];","module.exports = flarum.core.compat['common/Application'];","module.exports = flarum.core.compat['admin/components/AdminNav'];","module.exports = flarum.core.compat['admin/components/ExtensionLinkButton'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/components/Placeholder'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/resolvers/DefaultResolver'];","module.exports = flarum.core.compat['admin/utils/ExtensionData'];","module.exports = flarum.core.compat['admin/AdminApplication'];","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/highlight'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/components/Separator'];","module.exports = flarum.core.compat['common/components/Switch'];","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import {Children} from 'mithril';\nimport Component from 'flarum/common/Component';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\n\n/**\n * Works the same way as Flarum admin's HeaderPrimary\n */\nexport default class HeaderPrimary extends Component {\n    view() {\n        return m('ul.Header-controls', listItems(this.items().toArray()));\n    }\n\n    items(): ItemList<Children> {\n        return new ItemList<Children>();\n    }\n}\n","import {Children} from 'mithril';\nimport Component from 'flarum/common/Component';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SessionDropdown from 'flarum/admin/components/SessionDropdown';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport app from '../app';\n\n/**\n * Works the same way as Flarum admin's HeaderSecondary\n */\nexport default class HeaderSecondary extends Component {\n    view() {\n        return m('ul.Header-controls', listItems(this.items().toArray()));\n    }\n\n    items(): ItemList<Children> {\n        const items = new ItemList<Children>();\n\n        items.add('help', LinkButton.component({\n            href: 'https://docs.flarum.org/troubleshoot',\n            icon: 'fas fa-question-circle',\n            external: true,\n        }, app.translator.trans('core.admin.header.get_help')));\n\n        items.add('session', SessionDropdown.component());\n\n        return items;\n    }\n}\n","import app from 'flarum/common/app';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nexport interface ActiveLinkButtonAttrs extends ComponentAttrs {\n    href: string\n    activeRoutes?: string[]\n}\n\n/**\n * A modified LinkButton that accepts a new activeRoutes attr that defines on which routes\n * the button should be rendered as active.\n * The attribute is an array of strings. The strings can optionally be terminated with *\n * to match all routes with the prefix.\n */\n// @ts-ignore view method not type-hinted\nexport default class ActiveLinkButton extends LinkButton {\n    static isActive(attrs: ActiveLinkButtonAttrs) {\n        return m.route.get() === attrs.href || ActiveLinkButton.activeRoutes(attrs).some(routeName => {\n            const currentRouteName = (app.current.data as any).routeName;\n\n            // In the admin panel, this is called before a first page sets routeName apparently\n            if (!currentRouteName) {\n                return false;\n            }\n\n            const matchAllIndex = routeName.indexOf('*');\n\n            if (matchAllIndex !== -1) {\n                // We always assume that * is at the end, and use everything up to that point as the string\n                return currentRouteName.indexOf(routeName.substr(0, matchAllIndex)) === 0;\n            }\n\n            return currentRouteName === routeName;\n        });\n    }\n\n    static activeRoutes(attrs: ActiveLinkButtonAttrs): string[] {\n        if (attrs.activeRoutes) {\n            return attrs.activeRoutes;\n        }\n\n        return [];\n    }\n}\n","import {Vnode} from 'mithril'\nimport AdminNav from 'flarum/admin/components/AdminNav';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport ExtensionLinkButton from 'flarum/admin/components/ExtensionLinkButton';\nimport app from '../app';\nimport ActiveLinkButton from '../../common/components/ActiveLinkButton';\n\n// @ts-ignore view method is treated as abstract\nexport default class BackofficeNav extends AdminNav {\n    query: string = '';\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.query = '';\n    }\n\n    items() {\n        const items = new ItemList();\n\n        items.add('dashboard', LinkButton.component({\n            href: app.route('dashboard'),\n            icon: 'far fa-chart-bar',\n        }, app.translator.trans('flamarkt-backoffice.backoffice.nav.dashboard')), 80);\n\n        if (app.forum.attribute('canSearchUsers')) {\n            items.add('users', ActiveLinkButton.component({\n                href: app.route('users.index'),\n                icon: 'fas fa-user',\n                activeRoutes: [\n                    'users.*',\n                ],\n            }, app.translator.trans('flamarkt-backoffice.backoffice.nav.users')), 60);\n        }\n\n        items.add('search', m('.Search-input', m('input.FormControl.SearchBar', {\n            type: 'search',\n            value: this.query,\n            oninput: (event: InputEvent) => {\n                this.query = (event.target as HTMLInputElement).value;\n            },\n            placeholder: app.translator.trans('flamarkt-backoffice.backoffice.nav.searchPlaceholder')\n        })), -10);\n\n        return items;\n    }\n\n    extensions() {\n        let extensions: any[] = [];\n\n        Object.keys(app.data.extensions).forEach((id) => {\n            const extension = app.data.extensions[id];\n\n            if (!extension.extra['flamarkt-backoffice'] || !extension.extra['flamarkt-backoffice'].showInBackoffice) {\n                return;\n            }\n\n            extensions.push(extension);\n        });\n\n        return extensions;\n    }\n\n    extensionItems() {\n        const items = new ItemList();\n\n        this.extensions().map((extension) => {\n            const query = this.query.toUpperCase();\n            const title = extension.extra['flarum-extension'].title;\n\n            if (!query || title.toUpperCase().includes(query) || extension.description.toUpperCase().includes(query)) {\n                items.add(`extension-${extension.id}`, ExtensionLinkButton.component({\n                    href: app.route('extension', {id: extension.id}),\n                    extensionId: extension.id,\n                    className: 'ExtensionNavButton',\n                    title: extension.description\n                }, title));\n            }\n        });\n\n        return items;\n    }\n}\n","import Page from 'flarum/common/components/Page';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nexport default class DashboardPage extends Page {\n    view() {\n        return m('.DashboardPage', m('.container', m('.DashboardWip', [\n            m('h1', 'Flamarkt Backoffice'),\n            m('p', 'This special admin panel gives extensions a new place for moderation tools.'),\n            m('p', 'It\\'s still a work in progress. This space will accept widgets just like Flarum\\'s admin in a future version.'),\n            LinkButton.component({\n                className: 'Button',\n                href: 'https://github.com/flamarkt/backoffice',\n                external: true,\n            }, 'Learn more on GitHub'),\n        ])));\n    }\n}\n","import app from 'flarum/common/app';\nimport Model from 'flarum/common/Model';\n\nexport class Page<T extends Model> {\n    number: number;\n    items: T[];\n    links: any;\n\n    constructor(number: number, items: T[], links: any = {}) {\n        this.number = number;\n        this.items = items;\n        this.links = links || {};\n    }\n}\n\nexport default class AbstractListState<T extends Model> {\n    params: any = {};\n    pages: Page<T>[] = [];\n    loading: boolean = true;\n    moreResults: boolean = false;\n\n    constructor(params: any = {}) {\n        this.params = params;\n    }\n\n    type(): string {\n        return '';\n    }\n\n    limit(): number {\n        return 20;\n    }\n\n    requestParams() {\n        const params: any = {filter: this.params.filter || {}};\n\n        if (this.params.sort) {\n            params.sort = this.params.sort;\n        }\n\n        if (this.params.include) {\n            params.include = this.params.include;\n        }\n\n        if (this.params.q) {\n            params.filter.q = this.params.q;\n        }\n\n        return params;\n    }\n\n    clear() {\n        this.pages = [];\n        m.redraw();\n    }\n\n    refresh({deferClear = false} = {}) {\n        this.loading = true;\n\n        if (!deferClear) {\n            this.clear();\n        }\n\n        return this.loadResults(0).then(\n            results => {\n                this.pages = [];\n                this.parseResults(results, 0);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadResults(offset: number) {\n        const preloaded = app.preloadedApiDocument();\n\n        if (preloaded) {\n            return Promise.resolve(preloaded);\n        }\n\n        const params = this.requestParams();\n        params.page = {offset};\n\n        return app.store.find(this.type(), params);\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        const nextPageNumber = this.pages.length;\n\n        this.loadResults(nextPageNumber * this.limit())\n            .then(results => {\n                this.parseResults(results, nextPageNumber);\n            });\n    }\n\n    parseResults(results: any, number: number) {\n        if (results.length) {\n            this.pages.push(new Page(number, results, results.payload.links));\n        }\n\n        this.moreResults = results.payload.links && !!results.payload.links.next;\n\n        this.loading = false;\n\n        m.redraw();\n\n        return results;\n    }\n\n    remove(model: T) {\n        this.pages.forEach(page => {\n            const index = page.items.indexOf(model);\n\n            if (index !== -1) {\n                page.items.splice(index, 1);\n            }\n        });\n    }\n\n    add(model: T) {\n        // There should generally be a page, even if it's empty\n        // However if the list was never loaded/refreshed it might not exist\n        // We'll just push a first page if that happens\n        if (!this.pages.length) {\n            this.pages.push(new Page<T>(1, []));\n        }\n\n        this.pages[0].items.unshift(model);\n    }\n}\n","import AbstractListState from '../../common/states/AbstractListState';\nimport User from 'flarum/common/models/User';\n\nexport default class UserListState extends AbstractListState<User> {\n    type() {\n        return 'users';\n    }\n}\n","import {Vnode} from 'mithril';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Button from 'flarum/common/components/Button';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport Model from 'flarum/common/Model';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport app from '../app';\nimport AbstractListState from '../../common/states/AbstractListState';\n\nexport interface AbstractListAttrs<T extends Model> extends ComponentAttrs {\n    state: AbstractListState<T>\n}\n\nexport default class AbstractList<T extends Model> extends Component<AbstractListAttrs<T>> {\n    items(state: AbstractListState<T>): T[] {\n        return ([] as T[]).concat(...state.pages.map(page => page.items));\n    }\n\n    topRow(state: AbstractListState<T>) {\n        return null;\n    }\n\n    bottomRowContent(state: AbstractListState<T>) {\n        if (state.loading) {\n            return LoadingIndicator.component();\n        } else if (state.moreResults) {\n            return Button.component({\n                className: 'Button',\n                onclick: state.loadMore.bind(state),\n            }, app.translator.trans('load-more')); // TODO: actual translation key\n        }\n\n        if (state.pages.length === 0 && !state.loading) {\n            return Placeholder.component({\n                text: app.translator.trans('empty'), // TODO: actual translation key\n            });\n        }\n    }\n\n    bottomRow(state: AbstractListState<T>) {\n        const content = this.bottomRowContent(state);\n\n        return content ? m('tr', m('td', {\n            colspan: 100,\n        }, content)) : null;\n    }\n\n    view(vnode: Vnode<AbstractListAttrs<T>>) {\n        const {state} = vnode.attrs;\n\n        return m('table.Table', [\n            m('thead', m('tr', this.head().toArray())),\n            m('tbody', [\n                this.topRow(state),\n                this.items(state).map(model => this.row(model)),\n                this.bottomRow(state),\n            ]),\n        ]);\n    }\n\n    head(): ItemList<any> {\n        const columns = new ItemList();\n\n        columns.add('actions', m('th', 'Actions'), -100); //TODO: translation\n\n        return columns;\n    }\n\n    row(model: T) {\n        return m('tr', this.rowAttrs(model), this.columns(model).toArray());\n    }\n\n    rowAttrs(model: T): any {\n        return {};\n    }\n\n    columns(model: T): ItemList<any> {\n        const columns = new ItemList();\n\n        columns.add('actions', m('td', m('ul.Table-actions', listItems(this.actions(model).toArray()))), -100);\n\n        return columns;\n    }\n\n    actions(model: T): ItemList<any> {\n        return new ItemList();\n    }\n}\n","import LinkButton from 'flarum/common/components/LinkButton';\nimport User from 'flarum/common/models/User';\nimport AbstractList from './AbstractList';\nimport app from '../app';\n\nexport default class UserList extends AbstractList<User> {\n    head() {\n        const columns = super.head();\n\n        columns.add('email', m('th', app.translator.trans('flamarkt-backoffice.backoffice.users.head.email')), 10);\n\n        return columns;\n    }\n\n    columns(user: User) {\n        const columns = super.columns(user);\n\n        columns.add('email', m('td', user.email()), 10);\n\n        return columns;\n    }\n\n    actions(user: User) {\n        const actions = super.actions(user);\n\n        actions.add('edit', LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-pen',\n            href: app.route.user(user),\n        }));\n\n        return actions;\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import app from 'flarum/common/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport Model from 'flarum/common/Model';\nimport AbstractListState from '../states/AbstractListState';\n\nexport interface SortDropdownAttrs extends ComponentAttrs {\n    state: AbstractListState<Model>\n    updateUrl?: boolean\n}\n\nexport interface SortOptions {\n    [key: string]: string\n}\n\nexport default abstract class AbstractSortDropdown<T extends SortDropdownAttrs> extends Component<T> {\n    view() {\n        const options = this.options();\n\n        const activeSort = this.activeSort();\n\n        return m(Dropdown, {\n            className: 'SortDropdown ' + this.className(),\n            buttonClassName: 'Button',\n            label: options[activeSort],\n        }, Object.keys(options).map((value) => {\n            const label = options[value];\n            const active = value === this.activeSort();\n\n            return m(Button, {\n                icon: active ? 'fas fa-check' : true,\n                onclick: () => {\n                    this.applySort(value);\n                },\n                active,\n            }, label);\n        }));\n    }\n\n    className(): string {\n        return '';\n    }\n\n    activeSort(): string {\n        return this.attrs.state.params.sort || this.defaultSort();\n    }\n\n    applySort(sort: string) {\n        // Clone params otherwise it causes a page refresh even without m.route.set\n        const params = {...m.route.param()};\n\n        if (this.defaultSort() === sort) {\n            delete this.attrs.state.params.sort;\n            delete params.sort;\n        } else {\n            this.attrs.state.params.sort = sort;\n            params.sort = sort;\n        }\n\n        if (this.attrs.updateUrl) {\n            delete params.key;\n\n            // @ts-ignore\n            const {routeName} = app.current.data;\n\n            m.route.set(app.route(routeName, params));\n        } else {\n            this.attrs.state.refresh();\n        }\n    }\n\n    abstract options(): SortOptions\n\n    defaultSort(): string {\n        return Object.keys(this.options())[0];\n    }\n}\n\n","import AbstractSortDropdown, {SortDropdownAttrs, SortOptions} from '../../common/components/AbstractSortDropdown';\nimport UserListState from '../states/UserListState';\n\nexport interface UserSortDropdownAttrs extends SortDropdownAttrs {\n    state: UserListState\n}\n\nexport default class UserSortDropdown extends AbstractSortDropdown<UserSortDropdownAttrs> {\n    className(): string {\n        return 'UserSortDropdown';\n    }\n\n    options(): SortOptions {\n        return {\n            'default': 'Default sort',\n            '-joinedAt': 'Newest',\n            'joinedAt': 'Oldest',\n            '-lastSeenAt': 'Seen recently',\n            'lastSeenAt': 'Seen least recently',\n            'username': 'Username ASC',\n            '-username': 'Username DESC',\n            'commentCount': 'Comment count ASC',\n            '-commentCount': 'Comment count DESC',\n            'discussionCount': 'Discussion count ASC',\n            '-discussionCount': 'Discussion count DESC',\n        };\n    }\n}\n","import {Vnode} from 'mithril';\nimport Page from 'flarum/common/components/Page';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport extractText from 'flarum/common/utils/extractText';\nimport app from '../app';\nimport UserListState from '../states/UserListState';\nimport UserList from '../components/UserList';\nimport UserSortDropdown from '../components/UserSortDropdown';\n\nexport default class UserIndexPage extends Page {\n    list!: UserListState;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.list = this.initState();\n        this.list.refresh();\n\n        app.setTitle(extractText(app.translator.trans('flamarkt-backoffice.backoffice.users.title')));\n        app.setTitleCount(0);\n    }\n\n    initState() {\n        const params = m.route.param();\n\n        return new UserListState({\n            sort: params.sort,\n        });\n    }\n\n    view() {\n        return m('.UserIndexPage', m('.container', [\n            m('.Form-group', [\n                LinkButton.component({\n                    className: 'Button',\n                    href: app.route('users.show', {\n                        id: 'new',\n                    }),\n                }, app.translator.trans('flamarkt-backoffice.backoffice.users.new')),\n                m(UserSortDropdown, {\n                    state: this.list,\n                }),\n            ]),\n            m(UserList, {\n                state: this.list,\n            }),\n        ]));\n    }\n}\n","import {Children, Vnode} from 'mithril';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\n\nexport interface SubmitButtonAttrs extends ComponentAttrs {\n    exists: boolean\n    dirty: boolean\n}\n\nexport default class SubmitButton extends Component<SubmitButtonAttrs> {\n    view(vnode: Vnode<SubmitButtonAttrs>) {\n        const {\n            exists = false,\n            dirty = true,\n            ...attrs\n        } = vnode.attrs;\n\n        let label: Children = '';\n\n        // Check if children is truthy or is an array containing anything that's truthy\n        if (Array.isArray(vnode.children) ? vnode.children.some(a => a) : vnode.children) {\n            label = vnode.children;\n        } else if (exists) {\n            if (dirty) {\n                //TODO: translations\n                label = 'Save';\n            } else {\n                label = 'Saved';\n            }\n        } else {\n            label = 'Create';\n        }\n\n        return Button.component({\n            type: 'submit',\n            className: 'Button Button--primary',\n            disabled: exists && !dirty,\n            ...attrs,\n        }, label);\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import {Vnode} from 'mithril';\nimport app from 'flarum/common/app';\nimport Page, {IPageAttrs} from 'flarum/common/components/Page';\nimport Model from 'flarum/common/Model';\n\nexport default abstract class AbstractShowPage<CustomAttrs extends IPageAttrs = IPageAttrs> extends Page<CustomAttrs> {\n    oninit(vnode: Vnode<CustomAttrs, this>) {\n        super.oninit(vnode);\n\n        this.load();\n    }\n\n    load() {\n        const preloaded = app.preloadedApiDocument();\n\n        const id = m.route.param('id');\n\n        if (id === 'new') {\n            const newRecord = this.newRecord();\n\n            if (newRecord) {\n                this.show(newRecord);\n            }\n        } else if (preloaded instanceof Model) {\n            this.show(preloaded);\n        } else {\n            const params = this.requestParams();\n\n            app.store.find(this.findType(), id, params).then(model => {\n                this.show(model);\n\n                m.redraw();\n            });\n        }\n    }\n\n    newRecord(): Model | null {\n        return null;\n    }\n\n    findType(): string {\n        return '';\n    }\n\n    requestParams(): any {\n        return {};\n    }\n\n    show(model: Model) {\n        //\n    }\n\n    /**\n     * This method allows saving a model without the values changing in the store before a successful save\n     * It's important to use createRecord and model.pushData which don't update the store\n     * @param id\n     * @param attributes\n     */\n    saveThroughNewRecord<T extends Model = Model>(id: string, attributes: any): Promise<T> {\n        const record = this.newRecord();\n\n        if (!record) {\n            return Promise.reject();\n        }\n\n        if (id) {\n            record.pushData({id});\n            record.exists = true;\n        }\n\n        return record.save(attributes);\n    }\n}\n","import LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport User from 'flarum/common/models/User';\nimport app from '../app';\nimport SubmitButton from '../components/SubmitButton';\nimport AbstractShowPage from '../../common/pages/AbstractShowPage';\n\nexport default class UserShowPage extends AbstractShowPage {\n    user: User | null = null;\n    saving: boolean = false;\n    dirty: boolean = false;\n    username: string = '';\n    password: string = '';\n    email: string = '';\n\n    newRecord() {\n        return app.store.createRecord('users', {\n            // Same as product, we need to initialize the attributes to prevent errors\n            // flamarkt/identity will read user.attribute()\n            attributes: {},\n        });\n    }\n\n    findType() {\n        return 'users';\n    }\n\n    show(user: User) {\n        this.user = user;\n        this.username = user.username() || '';\n        this.email = user.email() || '';\n\n        // @ts-ignore\n        app.setTitle(user.email());\n        app.setTitleCount(0);\n    }\n\n    view() {\n        if (!this.user) {\n            return LoadingIndicator.component();\n        }\n\n        return m('form.UserShowPage', {\n            onsubmit: this.onsubmit.bind(this),\n        }, m('.container.container--narrow', this.fields().toArray()));\n    }\n\n    fields(): ItemList<any> {\n        const fields = new ItemList();\n\n        fields.add('username', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-backoffice.backoffice.users.field.username')),\n            m('input.FormControl', {\n                type: 'text',\n                value: this.username,\n                oninput: (event: Event) => {\n                    this.username = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                disabled: this.saving,\n            }),\n        ]));\n\n        fields.add('email', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-backoffice.backoffice.users.field.email')),\n            m('input.FormControl', {\n                type: 'email',\n                value: this.email,\n                oninput: (event: Event) => {\n                    this.email = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                // Disable field if own user, because Flarum won't allow editing it without passing meta.password\n                disabled: this.saving || app.session.user === this.user,\n            }),\n        ]));\n\n        // We need to show password field for new users because Flarum requires password in REST API\n        if (!this.user!.exists) {\n            fields.add('password', m('.Form-group', [\n                m('label', app.translator.trans('flamarkt-backoffice.backoffice.users.field.password')),\n                m('input.FormControl', {\n                    type: 'password',\n                    value: this.password,\n                    oninput: (event: Event) => {\n                        this.password = (event.target as HTMLInputElement).value;\n                        this.dirty = true;\n                    },\n                    disabled: this.saving,\n                }),\n            ]));\n        }\n\n        fields.add('submit', m('.Form-group', [\n            SubmitButton.component({\n                loading: this.saving,\n                dirty: this.dirty,\n                exists: this.user!.exists,\n            }),\n        ]), -10);\n\n        return fields;\n    }\n\n    data() {\n        const data: any = {\n            username: this.username,\n        };\n\n        // Only include email if it was modified\n        // This avoids issues with Flarum asking for password during email change\n        if (this.email !== this.user!.email()) {\n            data.email = this.email;\n        }\n\n        if (this.password) {\n            data.password = this.password;\n        }\n\n        return data;\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.saving = true;\n\n        this.user!.save(this.data()).then(user => {\n            this.user = user;\n\n            this.saving = false;\n            this.dirty = false;\n            m.redraw();\n\n            m.route.set(app.route.user(user));\n        }).catch(error => {\n            this.saving = false;\n            m.redraw();\n        });\n    }\n}\n","import DefaultResolver from 'flarum/common/resolvers/DefaultResolver';\nimport ExtensionPage, {ExtensionPageAttrs} from 'flarum/admin/components/ExtensionPage';\nimport app from '../app';\n\n/**\n * Same as Flarum's own ExtensionPageResolver but we need to copy it because it's not exported\n */\nexport default class ExtensionPageResolver<Attrs extends ExtensionPageAttrs = ExtensionPageAttrs,\n    RouteArgs extends Record<string, unknown> = {}> extends DefaultResolver<Attrs, ExtensionPage<Attrs>, RouteArgs> {\n    static extension: string | null = null;\n\n    onmatch(args: Attrs & RouteArgs, requestedPath: string, route: string) {\n        const extensionPage = app.extensionData.getPage<Attrs>(args.id);\n\n        if (extensionPage) {\n            return extensionPage;\n        }\n\n        return super.onmatch(args, requestedPath, route);\n    }\n}\n","import DashboardPage from './pages/DashboardPage';\nimport UserIndexPage from './pages/UserIndexPage';\nimport UserShowPage from './pages/UserShowPage';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport User from 'flarum/common/models/User';\nimport ExtensionPageResolver from './resolvers/ExtensionPageResolver';\nimport BackofficeApplication from './BackofficeApplication';\n\nexport default function (app: BackofficeApplication) {\n    app.routes = {\n        dashboard: {path: '/dashboard', component: DashboardPage},\n        'users.index': {path: '/users', component: UserIndexPage},\n        'users.show': {path: '/users/:id', component: UserShowPage},\n        extension: {path: '/extension/:id', component: ExtensionPage, resolverClass: ExtensionPageResolver},\n    };\n\n    app.route.user = (user: User) => {\n        return app.route('users.show', {\n            id: user.id(),\n        });\n    };\n}\n","import BackofficeApplication from './BackofficeApplication';\n\n// The original AdminApplication still gets created, but we override it here\n// The boot method of the original will never be called\nconst app = new BackofficeApplication();\n\n// @ts-expect-error Done same way as Flarum core\nwindow.app = app;\n\nexport default app;\n","import Application from 'flarum/common/Application';\nimport Navigation from 'flarum/common/components/Navigation';\nimport HeaderPrimary from './components/HeaderPrimary';\nimport HeaderSecondary from './components/HeaderSecondary';\nimport BackofficeNav from './components/BackofficeNav';\nimport routes from './routes';\nimport History from 'flarum/forum/utils/History';\nimport ExtensionData from 'flarum/admin/utils/ExtensionData';\nimport AdminApplication from 'flarum/admin/AdminApplication';\nimport app from 'flarum/admin/app';\n\nexport default class BackofficeApplication extends Application {\n    extensionData = new ExtensionData();\n\n    history = {\n        canGoBack: () => true,\n        getPrevious: () => {\n        },\n        // Ideally this would go back to the forum homepage\n        // But just like with Flarum's own admin, the displayed link is used as a relative path in the constructed URL\n        // the back() function would work, but for consistency let's have both redirect to the backoffice home for now\n        backUrl: () => '/',\n        back: function () {\n            m.route.set('/');\n        },\n    };\n\n    //history = new History();\n\n    constructor() {\n        super();\n\n        // Extensions might already have started adding initializers in the admin frontend so we need to copy them over\n        this.initializers = app.initializers;\n\n        // This value is used through the flarum/common/app proxy object\n        // I haven't figured out why it's not using the new window.app object\n        // The easiest solution is just to have the same store instance used by both\n        this.store = app.store;\n\n        // This value is read from ExtensionPage\n        this.extensionData = app.extensionData;\n\n        // This value seems to be used somewhere when using the ActiveLinkButton\n        // Also necessary if registering routes through the flarum/common/app proxy object\n        this.routes = app.routes;\n\n        routes(this);\n    }\n\n    mount() {\n        // These values are set in boot(), before calling mount()\n        // Copying them here is the best way to do it as soon as possible without re-implementing boot()\n        // Flarum will try to access this value inside ExtensionPage\n        app.forum = this.forum;\n        // Flarum will try to access this value inside SessionDropdown\n        app.session = this.session;\n\n        const defaultRoute = this.forum.attribute('defaultRoute');\n        let defaultAction = 'dashboard';\n\n        for (const i in this.routes) {\n            if (this.routes[i].path === defaultRoute) defaultAction = i;\n        }\n\n        this.routes[defaultAction].path = '/';\n        //this.history.push(defaultAction, this.translator.trans('core.forum.header.back_to_index_tooltip'), '/');\n\n        m.route.prefix = '/backoffice';\n        super.mount(this.forum.attribute('basePath'));\n\n        m.mount(document.getElementById('app-navigation'), {\n            view: () =>\n                Navigation.component({\n                    className: 'App-backControl',\n                    drawer: true,\n                }),\n        });\n        m.mount(document.getElementById('header-navigation'), Navigation);\n        m.mount(document.getElementById('header-primary'), HeaderPrimary);\n        m.mount(document.getElementById('header-secondary'), HeaderSecondary);\n        m.mount(document.getElementById('admin-navigation'), BackofficeNav);\n    }\n\n    getRequiredPermissions(permission: any) {\n        return AdminApplication.prototype.getRequiredPermissions.call(this, permission);\n    }\n\n    load(payload: Application[\"data\"]) {\n        super.load(payload);\n\n        // Flarum will try to access this value inside ExtensionPage\n        // @ts-ignore Typescript isn't happy, but it's basically the same code as core\n        app.data = payload;\n\n        // Flarum will use this to render translations in core components\n        app.translator = this.translator;\n    }\n\n    // @ts-ignore property with same name intentionally overridden\n    get current() {\n        // This value is updated by flarum/common/components/Page through the flarum/common/app proxy so it's always updated on the original app object\n        // We'll just proxy to that other object\n        return app.current;\n    }\n\n    set current(value) {\n        app.current = value;\n    }\n\n    // @ts-ignore property with same name intentionally overridden\n    get previous() {\n        return app.previous;\n    }\n\n    set previous(value) {\n        app.previous = value;\n    }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","type KeyboardEventHandler = (event: KeyboardEvent) => void;\ntype ShouldHandle = (event: KeyboardEvent) => boolean;\n\nenum Keys {\n    Enter = 13,\n    Escape = 27,\n    Space = 32,\n    ArrowUp = 38,\n    ArrowDown = 40,\n    ArrowLeft = 37,\n    ArrowRight = 39,\n    Tab = 9,\n    Backspace = 8,\n}\n\n/**\n * Same as Flarum's, but in common namespace so we can use it in backoffice as wel\n */\nexport default class KeyboardNavigatable {\n    /**\n     * Callback to be executed for a specified input.\n     */\n    protected callbacks = new Map<number, KeyboardEventHandler>();\n\n    /**\n     * Callback that determines whether keyboard input should be handled.\n     * By default, always handle keyboard navigation.\n     */\n    protected whenCallback: ShouldHandle = (event: KeyboardEvent) => true;\n\n    /**\n     * Provide a callback to be executed when navigating upwards.\n     *\n     * This will be triggered by the Up key.\n     */\n    onUp(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(Keys.ArrowUp, (e) => {\n            e.preventDefault();\n            callback(e);\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when navigating downwards.\n     *\n     * This will be triggered by the Down key.\n     */\n    onDown(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(Keys.ArrowDown, (e) => {\n            e.preventDefault();\n            callback(e);\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when the current item is selected..\n     *\n     * This will be triggered by the Return key (and Tab key, if not disabled).\n     */\n    onSelect(callback: KeyboardEventHandler, ignoreTabPress: boolean = false): KeyboardNavigatable {\n        const handler: KeyboardEventHandler = (e) => {\n            e.preventDefault();\n            callback(e);\n        };\n\n        if (!ignoreTabPress) this.callbacks.set(Keys.Tab, handler);\n        this.callbacks.set(Keys.Enter, handler);\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when the current item is tabbed into.\n     *\n     * This will be triggered by the Tab key.\n     */\n    onTab(callback: KeyboardEventHandler): KeyboardNavigatable {\n        const handler: KeyboardEventHandler = (e) => {\n            e.preventDefault();\n            callback(e);\n        };\n\n        this.callbacks.set(9, handler);\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when the navigation is canceled.\n     *\n     * This will be triggered by the Escape key.\n     */\n    onCancel(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(Keys.Escape, (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            callback(e);\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when previous input is removed.\n     *\n     * This will be triggered by the Backspace key.\n     */\n    onRemove(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(Keys.Backspace, (e) => {\n            if (e instanceof KeyboardEvent && e.target instanceof HTMLInputElement && e.target.selectionStart === 0 && e.target.selectionEnd === 0) {\n                callback(e);\n                e.preventDefault();\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback that determines whether keyboard input should be handled.\n     */\n    when(callback: ShouldHandle): KeyboardNavigatable {\n        this.whenCallback = callback;\n\n        return this;\n    }\n\n    /**\n     * Set up the navigation key bindings on the given jQuery element.\n     */\n    bindTo($element: JQuery<HTMLElement>) {\n        // Handle navigation key events on the navigatable element.\n        $element[0].addEventListener('keydown', this.navigate.bind(this));\n    }\n\n    /**\n     * Interpret the given keyboard event as navigation commands.\n     */\n    navigate(event: KeyboardEvent) {\n        // This callback determines whether keyboard should be handled or ignored.\n        if (!this.whenCallback(event)) return;\n\n        const keyCallback = this.callbacks.get(event.which);\n        if (keyCallback) {\n            keyCallback(event);\n        }\n    }\n}\n","import {Children, Vnode, VnodeDOM} from 'mithril';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Model from 'flarum/common/Model';\nimport KeyboardNavigatable from '../utils/KeyboardNavigatable';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nexport interface RelationshipSelectAttrs<T> extends ComponentAttrs {\n    relationship: T | T[] | null\n    hasOne: boolean\n    onchange: (value: T | T[] | null) => {},\n    placeholder?: string\n}\n\nexport default abstract class AbstractRelationshipSelect<T extends Model> extends Component<RelationshipSelectAttrs<T>> {\n    searchFilter: string = '';\n    debouncedSearchFilter: string = '';\n    searchDebouncer?: number;\n    activeListIndex: number = 0;\n    inputIsFocused: boolean = false;\n    navigator!: KeyboardNavigatable;\n    dropdownIsFocused: boolean = false\n    onmousedown!: (event: Event) => void\n\n    className(): string {\n        return '';\n    }\n\n    abstract search(query: string): Promise<void>\n\n    abstract results(query: string): T[] | null\n\n    abstract item(model: T, query?: string): Children\n\n    normalizedValue(): T[] {\n        if (Array.isArray(this.attrs.relationship)) {\n            return this.attrs.relationship;\n        }\n\n        if (this.attrs.relationship) {\n            return [this.attrs.relationship];\n        }\n\n        return [];\n    }\n\n    setValue(models: T[]) {\n        if (this.attrs.hasOne) {\n            this.attrs.onchange(models.length ? models[0] : null);\n        } else {\n            this.attrs.onchange(models);\n        }\n    }\n\n    oninit(vnode: Vnode<RelationshipSelectAttrs<T>, this>) {\n        super.oninit(vnode);\n\n        this.navigator = new KeyboardNavigatable();\n        this.navigator\n            .onUp(() => this.setIndex(this.activeListIndex - 1, true))\n            .onDown(() => this.setIndex(this.activeListIndex + 1, true))\n            .onSelect(this.select.bind(this))\n            .onRemove(() => {\n                const models = this.normalizedValue();\n\n                if (!models.length) {\n                    return;\n                }\n\n                this.toggleModel(models[models.length - 1]);\n            })\n            .when(event => {\n                // We want to allow selecting with space because it's a common way to select\n                // However this interferes with the ability to enter spaces\n                // So we will have space act as select, but only if nothing is typed yet\n                if (event.key === ' ' && this.searchFilter === '') {\n                    event.preventDefault();\n                    this.select(event);\n\n                    return false;\n                }\n\n                // We don't want Tab to act as select, as this prevent moving from field to field\n                return event.key !== 'Tab';\n            });\n    }\n\n    oncreate(vnode: VnodeDOM<RelationshipSelectAttrs<T>, this>) {\n        super.oncreate(vnode);\n\n        // Since we are not calling the original Component.oncreate, we need to copy the dom reference manually\n        this.element = vnode.dom;\n\n        this.onmousedown = (event: Event) => {\n            const dropdown = vnode.dom.querySelector('.Dropdown-menu');\n\n            if (\n                dropdown &&\n                dropdown.contains(event.target as HTMLElement)\n            ) {\n                if (!this.dropdownIsFocused) {\n                    this.dropdownIsFocused = true;\n                    m.redraw();\n                }\n            } else {\n                if (this.dropdownIsFocused) {\n                    this.dropdownIsFocused = false;\n                    m.redraw();\n                }\n            }\n        };\n\n        document.addEventListener('mousedown', this.onmousedown);\n    }\n\n    onremove(vnode: VnodeDOM<RelationshipSelectAttrs<T>, this>) {\n        super.onremove(vnode);\n\n        document.removeEventListener('mousedown', this.onmousedown);\n    }\n\n    indexInSelectedModels(model: T) {\n        return this.normalizedValue().findIndex(m => m.id() === model.id());\n    }\n\n    addModel(model: T) {\n        if (this.attrs.hasOne) {\n            this.setValue([model]);\n        } else {\n            const models = this.normalizedValue();\n\n            models.push(model);\n\n            this.setValue(models);\n        }\n    }\n\n    removeModel(model: T) {\n        const index = this.indexInSelectedModels(model);\n\n        if (index !== -1) {\n            const models = this.normalizedValue();\n\n            models.splice(index, 1);\n\n            this.setValue(models);\n        }\n    }\n\n    view() {\n        return m('.RelationshipSelect', {\n            className: this.className(),\n        }, [\n            m('.RelationshipSelect-Form', this.formItems().toArray()),\n            this.listAvailableModels(this.results(this.debouncedSearchFilter)),\n        ]);\n    }\n\n    formItems() {\n        const items = new ItemList();\n\n        items.add('input', m('.RelationshipSelect-FakeInput-Wrapper', m('.RelationshipSelect-FakeInput.FormControl', {\n            className: this.inputIsFocused ? 'focus' : '',\n        }, this.inputItems().toArray())), 20);\n\n        return items;\n    }\n\n    inputItems() {\n        const items = new ItemList();\n\n        items.add('selected', this.normalizedValue().map(model => {\n            return m('span.RelationshipSelect-Selected', {\n                onclick: () => {\n                    this.toggleModel(model);\n                    this.onready();\n                },\n            }, this.item(model));\n        }), 20);\n\n        items.add('control', m('input.FormControl', {\n            placeholder: this.attrs.placeholder,\n            value: this.searchFilter,\n            oninput: (event: Event) => {\n                this.searchFilter = (event.target as HTMLInputElement).value;\n                this.activeListIndex = 0;\n\n                clearTimeout(this.searchDebouncer);\n\n                this.searchDebouncer = setTimeout(() => {\n                    this.debouncedSearchFilter = this.searchFilter;\n                    this.search(this.debouncedSearchFilter);\n                }, 300);\n            },\n            onkeydown: this.navigator.navigate.bind(this.navigator),\n            // Use local methods so that other extensions can extend behaviour\n            onfocus: this.oninputfocus.bind(this),\n            onblur: this.oninputblur.bind(this),\n        }), 10);\n\n        return items;\n    }\n\n    oninputfocus() {\n        this.inputIsFocused = true;\n\n        // If we click or move to the input without typing anything, we want to autocomplete the empty query\n        if (this.debouncedSearchFilter === '') {\n            this.search(this.debouncedSearchFilter);\n        }\n    }\n\n    oninputblur() {\n        this.inputIsFocused = false;\n    }\n\n    listAvailableModels(models: T[] | null): Children {\n        // We need two attributes to hold the dropdown open\n        // One is the input focus, managed by the modal\n        // The second one is needed because there's a short moment during a click where the focus is lost on the input\n        // mousedown triggers first, then the input blur, and only in mouseup can we put focus on the input again\n        if (!(this.inputIsFocused || this.dropdownIsFocused) || (Array.isArray(models) && models.length === 0)) {\n            return null;\n        }\n\n        let content;\n\n        if (models === null) {\n            content = LoadingIndicator.component();\n        } else {\n            content = models.map(this.listAvailableModel.bind(this));\n        }\n\n        return m('ul.Dropdown-menu.RelationshipSelect-Dropdown', content);\n    }\n\n    listAvailableModel(model: T, index: number) {\n        // Using a wrapper around the item to cancel Flarum default li > span rules\n        // And this could be useful for customization\n        return m('li.RelationshipSelect-Dropdown-Item', {\n            'data-index': index,\n            className: classList({\n                selected: this.indexInSelectedModels(model) !== -1,\n                active: this.activeListIndex === index,\n            }),\n            onmouseover: () => this.activeListIndex = index,\n            onclick: this.toggleModel.bind(this, model),\n        }, m('.RelationshipSelect-Dropdown-Item-Wrap', this.item(model, this.debouncedSearchFilter)));\n    }\n\n    toggleModel(model: T) {\n        const index = this.indexInSelectedModels(model);\n\n        if (index !== -1) {\n            this.removeModel(model);\n        } else {\n            this.addModel(model);\n        }\n\n        if (this.searchFilter) {\n            this.searchFilter = '';\n            this.debouncedSearchFilter = '';\n            this.activeListIndex = 0;\n        }\n\n        // Defer re-focusing to next browser draw\n        setTimeout(() => {\n            this.onready();\n        });\n    }\n\n    select(e: KeyboardEvent) {\n        const $element = this.getDomElement(this.activeListIndex);\n\n        // If nothing matches, the user probably typed text that doesn't match anything\n        // In that case we don't want to submit just yet, but we will delete the text\n        // so that typing enter multiple times does end up submitting\n        if (!$element.length) {\n            this.searchFilter = '';\n            this.debouncedSearchFilter = '';\n            return;\n        }\n\n        $element[0].dispatchEvent(new Event('click'));\n    }\n\n    getDomElement(index: number) {\n        return this.$(`.RelationshipSelect-Dropdown-Item[data-index=\"${index}\"]`);\n    }\n\n    setIndex(index: number, scrollToItem: boolean) {\n        const $dropdown = this.$('.RelationshipSelect-Dropdown');\n\n        const indexLength = this.$('.RelationshipSelect-Dropdown-Item').length;\n\n        if (index < 0) {\n            index = indexLength - 1;\n        } else if (index >= indexLength) {\n            index = 0;\n        }\n\n        const $item = this.getDomElement(index);\n        this.activeListIndex = index;\n\n        m.redraw();\n\n        if (scrollToItem) {\n            const dropdownScroll = $dropdown.scrollTop() || 0;\n            const dropdownTop = $dropdown.offset()?.top || 0;\n            const dropdownBottom = dropdownTop + ($dropdown.outerHeight() || 0);\n            const itemTop = $item.offset()?.top || 0;\n            const itemBottom = itemTop + ($item.outerHeight() || 0);\n\n            let scrollTop;\n            if (itemTop < dropdownTop) {\n                scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n            } else if (itemBottom > dropdownBottom) {\n                scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n            }\n\n            if (typeof scrollTop !== 'undefined') {\n                $dropdown.stop(true).animate({scrollTop}, 100);\n            }\n        }\n    }\n\n    onready() {\n        this.$('input').first().focus().select();\n    }\n}\n","import {ClassComponent, Vnode, VnodeDOM} from 'mithril';\n\nexport interface SortableAttrs {\n    className?: string\n    handleClassName?: string | null\n    containerTag?: string\n    placeholderTag?: string\n    disabled?: boolean\n    direction?: 'vertical' | 'horizontal'\n    onsort: (origin: number, destination: number) => void,\n}\n\n/**\n * A sortable implementation inspired by html5sortable, but designed to work with Mithril\n * The sortable children must be a flat array of vnodes and be keyed\n */\nexport default class Sortable implements ClassComponent<SortableAttrs> {\n    sortingIndex: number | null = null;\n    showPlaceholderForIndex: number = 0;\n\n    dragoverenterhandler!: (event: DragEvent) => void;\n    drophandler!: (event: DragEvent) => void;\n\n    oncreate(vnode: VnodeDOM<SortableAttrs>) {\n        // We need to handle both dragover and dragenter to prevent inputs from showing a cursor when hovered\n        // We also need this event to handle mouse movement because stopping propagation seems to stop mousemove event\n        this.dragoverenterhandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n                // @ts-ignore dataTransfer could be null... but not sure when that could happen\n                event.dataTransfer.dropEffect = 'move';\n\n                let targetIndex = 0;\n\n                // We will show the placeholder above or below the hovered item using the middle height as criteria\n                (vnode.dom.childNodes as any as HTMLElement[]).forEach(element => {\n                    const index = parseInt(element.dataset.index || '');\n\n                    // Ignore elements without an index (those will be the placeholders)\n                    if (isNaN(index)) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    if (vnode.attrs.direction === 'horizontal') {\n                        // Ignore invisible elements\n                        if (!position.width) {\n                            return;\n                        }\n\n                        const middleX = position.left + (position.width / 2);\n\n                        if (event.pageX > middleX + window.scrollX) {\n                            targetIndex = index + 1;\n                        }\n                    } else {\n                        // Ignore invisible elements\n                        if (!position.height) {\n                            return;\n                        }\n\n                        const middleY = position.top + (position.height / 2);\n\n                        if (event.pageY > middleY + window.scrollY) {\n                            targetIndex = index + 1;\n                        }\n                    }\n                });\n\n                if (targetIndex !== this.showPlaceholderForIndex) {\n                    this.showPlaceholderForIndex = targetIndex;\n                    m.redraw();\n                }\n            }\n        };\n\n        document.addEventListener('dragover', this.dragoverenterhandler);\n        document.addEventListener('dragenter', this.dragoverenterhandler);\n\n        // Prevent dropping our sortable item into anything else\n        // Without this it's possible to drop the value into inputs or worse, cause the browser to navigate to 0.0.0.0\n        this.drophandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const origin = this.sortingIndex;\n                // This component works in reference to the original index, so there are always two possible placeholders\n                // in between the moved component. However we want to send the new index without that space\n                const destination = this.showPlaceholderForIndex - (this.showPlaceholderForIndex > this.sortingIndex ? 1 : 0);\n\n                this.sortingIndex = null;\n                m.redraw();\n\n                if (destination !== origin) {\n                    vnode.attrs.onsort(origin, destination);\n                }\n            }\n        };\n\n        document.addEventListener('drop', this.drophandler);\n    }\n\n    onremove() {\n        document.removeEventListener('dragover', this.dragoverenterhandler);\n        document.removeEventListener('dragenter', this.dragoverenterhandler);\n        document.removeEventListener('drop', this.drophandler);\n    }\n\n    view(vnode: Vnode<SortableAttrs>) {\n        const children: Vnode[] = [];\n\n        (vnode.children as Vnode<any>[]).forEach((content, index) => {\n            if (this.sortingIndex !== null && this.showPlaceholderForIndex === index) {\n                children.push(this.placeholder(vnode));\n            }\n\n            if (index === this.sortingIndex) {\n                if (!content.attrs.style) {\n                    content.attrs.style = {};\n                }\n\n                content.attrs.style.display = 'none';\n            }\n\n            content.attrs['data-index'] = index;\n            content.attrs.ondragstart = (event: DragEvent) => {\n                if (!event.target || !event.dataTransfer) {\n                    return;\n                }\n\n                let {handleClassName} = vnode.attrs;\n\n                // By default we only handle moves that have this class name\n                // The check can be disabled by setting handleClassName to null\n                if (typeof handleClassName === 'undefined') {\n                    handleClassName = 'js-handle';\n                }\n\n                if ((!handleClassName || (event.target as HTMLElement).classList.contains(handleClassName)) && !vnode.attrs.disabled) {\n                    const element = Array.from((vnode as any as VnodeDOM).dom.childNodes as any as HTMLElement[]).find(elem => elem.dataset.index === index + '');\n\n                    // This should usually not happen since all referenced indexes should exist\n                    // But this pleases typescript\n                    if (!element) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    event.dataTransfer.effectAllowed = 'move';\n                    event.dataTransfer.setData('text/plain', index + ''); // Cast to string\n                    event.dataTransfer.setDragImage(element, event.pageX - position.left - window.scrollX, event.pageY - position.top - window.scrollY);\n\n                    this.sortingIndex = index;\n                    this.showPlaceholderForIndex = index;\n                } else {\n                    // @ts-ignore Mithril event redraw\n                    event.redraw = false;\n                }\n            };\n\n            children.push(content);\n        });\n\n        if (this.sortingIndex !== null && this.showPlaceholderForIndex === (vnode.children as Vnode[]).length) {\n            children.push(this.placeholder(vnode));\n        }\n\n        const attrs: any = {};\n\n        if (vnode.attrs.className) {\n            attrs.className = vnode.attrs.className;\n        }\n\n        return m(vnode.attrs.containerTag || 'div', attrs, children);\n    }\n\n    placeholder(vnode: Vnode<SortableAttrs>): Vnode {\n        return m(vnode.attrs.placeholderTag || 'div', {\n            className: 'SortablePlaceholder',\n            key: 'placeholder',\n        }, vnode.attrs.placeholderTag === 'tr' ? m('td', {\n            colspan: 100,\n        }) : null);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport icon from 'flarum/common/helpers/icon';\n\nexport interface SortableHandleAttrs {\n    elementTag?: string\n    className?: string\n    disabled?: boolean\n}\n\nexport default class SortableHandle implements ClassComponent<SortableHandleAttrs> {\n    view(vnode: Vnode<SortableHandleAttrs>) {\n        const attrs: any = {\n            className: (vnode.attrs.className ? vnode.attrs.className + ' ' : '') + 'js-handle',\n        };\n\n        if (vnode.attrs.disabled) {\n            attrs.className += ' disabled';\n        } else {\n            attrs.draggable = 'true';\n        }\n\n        return m(vnode.attrs.elementTag || 'div', attrs, icon('fas fa-grip-lines'));\n    }\n}\n","import AbstractRelationshipSelect from './components/AbstractRelationshipSelect';\nimport AbstractSortDropdown from './components/AbstractSortDropdown';\nimport ActiveLinkButton from './components/ActiveLinkButton';\nimport Sortable from './components/Sortable';\nimport SortableHandle from './components/SortableHandle';\nimport UserRelationshipSelect from './components/UserRelationshipSelect';\nimport AbstractShowPage from './pages/AbstractShowPage';\nimport * as AbstractListState from './states/AbstractListState';\nimport KeyboardNavigatable from './utils/KeyboardNavigatable';\n\nexport const common = {\n    'components/AbstractRelationshipSelect': AbstractRelationshipSelect,\n    'components/AbstractSortDropdown': AbstractSortDropdown,\n    'components/ActiveLinkButton': ActiveLinkButton,\n    'components/Sortable': Sortable,\n    'components/SortableHandle': SortableHandle,\n    'components/UserRelationshipSelect': UserRelationshipSelect,\n    'pages/AbstractShowPage': AbstractShowPage,\n    'states/AbstractListState': AbstractListState,\n    'utils/KeyboardNavigatable': KeyboardNavigatable,\n}\n","import app from 'flarum/common/app';\nimport User from 'flarum/common/models/User';\nimport username from 'flarum/common/helpers/username';\nimport highlight from 'flarum/common/helpers/highlight';\nimport avatar from 'flarum/common/helpers/avatar';\nimport AbstractRelationshipSelect from './AbstractRelationshipSelect';\n\nexport default class UserRelationshipSelect extends AbstractRelationshipSelect<User> {\n    protected resultsCache = new Map<string, User[]>();\n\n    className() {\n        return 'UserRelationshipSelect';\n    }\n\n    search(query: string) {\n        if (!query) {\n            m.redraw();\n            return Promise.resolve();\n        }\n\n        return app.store\n            .find('users', {\n                filter: {q: query},\n                page: {limit: 5},\n            })\n            .then((results) => {\n                this.resultsCache.set(query, results);\n                m.redraw();\n            });\n    }\n\n    results(query: string) {\n        if (!query) {\n            return [];\n        }\n\n        query = query.toLowerCase();\n\n        const results = this.resultsCache.get(query);\n\n        // Indicates still loading\n        if (typeof results === 'undefined') {\n            return null;\n        }\n\n        return (results || [])\n            .concat(\n                app.store\n                    .all<User>('users')\n                    .filter((user) => [user.username(), user.displayName()].some((value) => value.toLowerCase().substr(0, query.length) === query))\n            )\n            .filter((e, i, arr) => arr.lastIndexOf(e) === i)\n            .sort((a, b) => a.displayName().localeCompare(b.displayName()));\n    }\n\n    item(user: User, query?: string) {\n        const name = username(user);\n\n        return [\n            avatar(user),\n            query ? {\n                // Re-build a Mithril text node into a tag node with highlight\n                ...name,\n                text: undefined,\n                children: [highlight(name.text as string, query)],\n            } : name,\n        ];\n    }\n}\n","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\n\ninterface PermanentDeleteButtonAttrs extends ComponentAttrs {\n    model: {\n        isHidden(): boolean\n        delete(): any\n    }\n\n    afterdelete(): void\n}\n\nexport default class PermanentDeleteButton extends Component<PermanentDeleteButtonAttrs> {\n    saving: boolean = false;\n\n    view() {\n        const {model} = this.attrs;\n\n        if (!model.isHidden()) {\n            return null;\n        }\n\n        return m(Button, {\n            className: 'Button',\n            icon: 'fas fa-trash',\n            onclick: () => {\n                if (!confirm('Are you sure you want to permanently delete this record?')) {\n                    return;\n                }\n\n                this.saving = true;\n\n                model.delete().then(() => {\n                    this.saving = false;\n                    m.redraw();\n\n                    this.attrs.afterdelete();\n                }).catch((error: any) => {\n                    this.saving = false;\n                    m.redraw();\n\n                    throw error;\n                });\n            },\n        }, 'Delete Permanently');\n    }\n}\n","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\n\ninterface SoftDeleteButtonAttrs extends ComponentAttrs {\n    model: {\n        exists: boolean\n        isHidden(): boolean\n        save(attributes: any): any\n    }\n}\n\nexport default class SoftDeleteButton extends Component<SoftDeleteButtonAttrs> {\n    saving: boolean = false;\n\n    view() {\n        const {model} = this.attrs;\n\n        if (!model.exists) {\n            return null;\n        }\n\n        return m(Button, {\n            className: 'Button',\n            icon: model.isHidden() ? 'fas fa-eye' : 'fas fa-eye-slash',\n            onclick: () => {\n                this.saving = true;\n\n                model.save({\n                    isHidden: !model.isHidden(),\n                }).then(() => {\n                    this.saving = false;\n                    m.redraw();\n                }).catch((error: any) => {\n                    this.saving = false;\n                    m.redraw();\n\n                    throw error;\n                });\n            },\n        }, model.isHidden() ? 'Restore' : 'Soft Delete');\n    }\n}\n","import app from './app';\nimport AbstractList from './components/AbstractList';\nimport BackofficeNav from './components/BackofficeNav';\nimport HeaderPrimary from './components/HeaderPrimary';\nimport HeaderSecondary from './components/HeaderSecondary';\nimport PermanentDeleteButton from './components/PermanentDeleteButton';\nimport SoftDeleteButton from './components/SoftDeleteButton';\nimport SubmitButton from './components/SubmitButton';\nimport UserList from './components/UserList';\nimport UserSortDropdown from './components/UserSortDropdown';\nimport DashboardPage from './pages/DashboardPage';\nimport UserIndexPage from './pages/UserIndexPage';\nimport UserShowPage from './pages/UserShowPage';\nimport ExtensionPageResolver from './resolvers/ExtensionPageResolver';\nimport UserListState from './states/UserListState';\n\nexport const backoffice = {\n    'app': app,\n    'components/AbstractList': AbstractList,\n    'components/BackofficeNav': BackofficeNav,\n    'components/HeaderPrimary': HeaderPrimary,\n    'components/HeaderSecondary': HeaderSecondary,\n    'components/PermanentDeleteButton': PermanentDeleteButton,\n    'components/SoftDeleteButton': SoftDeleteButton,\n    'components/SubmitButton': SubmitButton,\n    'components/UserList': UserList,\n    'components/UserSortDropdown': UserSortDropdown,\n    'pages/DashboardPage': DashboardPage,\n    'pages/UserIndexPage': UserIndexPage,\n    'pages/UserShowPage': UserShowPage,\n    'resolvers/UserListState': ExtensionPageResolver,\n    'states/UserListState': UserListState,\n}\n","// app must be imported before anything else, otherwise it messed up imports in the compat files\nimport app from './app';\nimport {common} from '../common/compat';\nimport {backoffice} from './compat';\nimport addHeaderLinkToAdmin from './addHeaderLinkToAdmin';\nimport registerSettings from './registerSettings';\nimport hideSettingsAndPermissionsIfNotAdmin from './hideSettingsAndPermissionsIfNotAdmin';\nimport registerPatchInitializer from '../common/registerPatchInitializer';\n\nexport {\n    app, // This export is used from the view file, but not by the extension imports. That other export is in the compat file\n    common,\n    backoffice,\n};\n\napp.initializers.add('flamarkt-backoffice', () => {\n    addHeaderLinkToAdmin();\n    registerSettings();\n    hideSettingsAndPermissionsIfNotAdmin();\n});\n\nregisterPatchInitializer();\n","import {extend} from 'flarum/common/extend';\nimport SessionDropdown from 'flarum/admin/components/SessionDropdown';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Separator from 'flarum/common/components/Separator';\nimport app from './app';\n\nexport default function () {\n    extend(SessionDropdown.prototype, 'items', function (items) {\n        // Add a separator between links and logout button, just like in the forum frontend\n        if (!items.has('separator')) {\n            items.add('separator', Separator.component(), -90);\n        }\n\n        // In case a different extension was doing the same, let's just skip\n        if (items.has('administration')) {\n            return;\n        }\n\n        items.add('administration', LinkButton.component({\n            icon: 'fas fa-wrench',\n            href: app.forum.attribute('adminUrl'),\n            external: true,\n        }, app.translator.trans('flamarkt-backoffice.lib.header.admin_button')));\n    });\n}\n","import app from './app';\n\nexport default function () {\n    app.extensionData.for('flamarkt-backoffice')\n        .registerPermission({\n            icon: 'fas fa-wrench',\n            label: app.translator.trans('flamarkt-backoffice.backoffice.permissions.backoffice'),\n            permission: 'backoffice', // Intentionally not namespaced\n        }, 'moderate');\n}\n","import {extend, override} from 'flarum/common/extend';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Switch from 'flarum/common/components/Switch';\nimport app from './app';\n\nexport default function () {\n    override(ExtensionPage.prototype, 'content', function (original: any) {\n        // If the user has admin access, show as normal\n        if (app.forum.attribute('adminUrl')) {\n            return original();\n        }\n\n        const settings = app.extensionData.getSettings(this.extension.id);\n\n        // If there are no settings, show as normal\n        if (!settings) {\n            return original();\n        }\n\n        // Show a special message so the user isn't confused why they don't see or can't edit the values\n        return m('.ExtensionPage-settings', m('.container', m('h3.ExtensionPage-subHeader', app.translator.trans('flamarkt-backoffice.backoffice.settingsNotAvailableForNonAdmin'))));\n    });\n\n    extend(ExtensionPage.prototype, 'header', function (content) {\n        if (app.forum.attribute('adminUrl')) {\n            return;\n        }\n\n        content.forEach(vdom => {\n            // .ExtensionPage-header level\n            (vdom && vdom.children || []).forEach(vdom => {\n                // .container level\n                (vdom && vdom.children || []).forEach(vdom => {\n                    // .ExtensionPage-headerItems level\n                    (vdom && vdom.children || []).forEach(vdom => {\n                        if (vdom && vdom.tag === Switch) {\n                            // Disable extension checkbox\n                            vdom.attrs.disabled = true;\n                        }\n                    });\n                });\n            });\n        });\n    });\n}\n","import app from 'flarum/common/app';\nimport patchModelHasOneNull from './patchModelHasOneNull';\nimport patchStoreAllowVerbatimRelationships from './patchStoreAllowVerbatimRelationships';\n\nexport default function () {\n    // On one hand these need to run as early as possible because they need to override Model.hasOne which is used in other extension's extenders\n    // But priority might need to be adjusted because it need to run as late as possible for the null catch to be the most outward override and therefore runs before other overrides\n    app.initializers.add('flamarkt-backoffice-patch', () => {\n        patchModelHasOneNull();\n        patchStoreAllowVerbatimRelationships();\n    }, 100);\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\n/**\n * Fixes inability to use null hasOne relationships with Flarum javascript models\n * @see https://github.com/flarum/core/issues/2876\n */\nexport default function () {\n    // Allow passing null relationships in Model.prototype.save()\n    override(Model, 'getIdentifier' as any, function (original: (model: Model) => any, model: Model | any) {\n        if (!model) {\n            return null;\n        }\n\n        return original(model);\n    });\n\n    // Don't error if the data property exists on the relationship but is null\n    // null is allowed as per https://jsonapi.org/format/#document-resource-object-linkage\n    override(Model, 'hasOne', function (original: (name: string) => (() => any), name: string) {\n        return function (this: Model) {\n            if (this.data.relationships) {\n                const relationship = this.data.relationships[name];\n\n                if (relationship && !relationship.data) {\n                    // Flarum might use false here. The code only looks for falsy for now anyway\n                    return null;\n                }\n            }\n\n            return original(name).call(this);\n        };\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\n/**\n * The way Flarum parses relationships inside of the save() method prevents us from saving data alongside the relation\n * To work around this, we override this method that will allow us to pass down raw objects directly in the model during save\n * The same code is used in fof/taxonomies\n */\nexport default function () {\n    override(Model, 'getIdentifier' as any, function (original: (model: Model) => any, model: Model | any) {\n        // This is fixed by patchModelHasOneNull but we need to handle it here as well depending on the load order\n        if (!model) {\n            return null;\n        }\n\n        if (model.verbatim) {\n            delete model.verbatim;\n\n            return model;\n        }\n\n        return original(model);\n    });\n}\n"],"sourceRoot":""}