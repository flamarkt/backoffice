{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,+B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,c,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCQxDC,IAAAA,aAAAA,IAAqB,uBAAuB,YACxCC,EAAAA,EAAAA,UAASC,IAAAA,UAAyB,WAAW,SAAUC,GACnD,OAAKC,KAAKC,UAAUC,MAAM,wBAA2BF,KAAKC,UAAUC,MAAM,uBAAuBC,qBAI1FC,EAAE,0BAA2BA,EAAE,aAAcA,EAAE,cAAeA,EAAE,WAAY,CAC/EC,KAAM,yBAA2BL,KAAKC,UAAUK,IACjDV,IAAAA,WAAAA,MAAqB,sDALbG,GAMf,KAEAQ,EAAAA,EAAAA,QAAOC,IAAAA,UAA2B,SAAS,SAAUC,GACjDA,EAAMC,IAAI,sBAAuBC,IAAAA,UAAqB,CAClDC,KAAM,wBACNP,KAAMT,IAAAA,MAAAA,UAAoB,iBAC1BiB,UAAU,GACXjB,IAAAA,WAAAA,MAAqB,sDAGnBa,EAAMK,IAAI,cACXL,EAAMC,IAAI,YAAaK,IAAAA,aAAwB,GAEvD,GACJ,ICxBInB,IAAAA,aAAAA,IAAqB,6BAA6B,YCElDC,EAAAA,EAAAA,UAASmB,IAAO,iBAAwB,SAAUjB,EAAiCkB,GAC/E,OAAKA,EAIElB,EAASkB,GAHL,IAIf,KAIApB,EAAAA,EAAAA,UAASmB,IAAO,UAAU,SAAUjB,EAAyCmB,GACzE,OAAO,WACH,GAAIlB,KAAKmB,KAAKC,cAAe,CACzB,IAAMC,EAAerB,KAAKmB,KAAKC,cAAcF,GAE7C,GAAIG,IAAiBA,EAAaF,KAE9B,OAAO,IAEf,CAEA,OAAOpB,EAASmB,GAAM7B,KAAKW,KAC/B,CACJ,KCvBAH,EAAAA,EAAAA,UAASmB,IAAO,iBAAwB,SAAUjB,EAAiCkB,GAE/E,OAAKA,EAIDA,EAAMK,iBACCL,EAAMK,SAENL,GAGJlB,EAASkB,GATL,IAUf,GFZA,GAAG,I","sources":["webpack://@flamarkt/backoffice/webpack/bootstrap","webpack://@flamarkt/backoffice/webpack/runtime/compat get default export","webpack://@flamarkt/backoffice/webpack/runtime/define property getters","webpack://@flamarkt/backoffice/webpack/runtime/hasOwnProperty shorthand","webpack://@flamarkt/backoffice/webpack/runtime/make namespace object","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['admin/app']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['admin/components/SessionDropdown']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['common/components/Separator']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['common/app']\"","webpack://@flamarkt/backoffice/external root \"flarum.core.compat['common/Model']\"","webpack://@flamarkt/backoffice/./src/admin/index.ts","webpack://@flamarkt/backoffice/./src/common/registerPatchInitializer.ts","webpack://@flamarkt/backoffice/./src/common/patchModelHasOneNull.ts","webpack://@flamarkt/backoffice/./src/common/patchStoreAllowVerbatimRelationships.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/SessionDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Separator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import app from 'flarum/admin/app';\nimport {extend, override} from 'flarum/common/extend';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport SessionDropdown from 'flarum/admin/components/SessionDropdown';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Separator from 'flarum/common/components/Separator';\nimport registerPatchInitializer from '../common/registerPatchInitializer';\n\napp.initializers.add('flamarkt-backoffice', () => {\n    override(ExtensionPage.prototype, 'content', function (original) {\n        if (!this.extension.extra['flamarkt-backoffice'] || !this.extension.extra['flamarkt-backoffice'].settingsInBackoffice) {\n            return original();\n        }\n\n        return m('.ExtensionPage-settings', m('.container', m('.Form-group', m('a.Button', {\n            href: '/backoffice/extension/' + this.extension.id,\n        }, app.translator.trans('flamarkt-backoffice.admin.settingsInBackoffice')))));\n    });\n\n    extend(SessionDropdown.prototype, 'items', function (items) {\n        items.add('flamarkt-backoffice', LinkButton.component({\n            icon: 'fas fa-tachometer-alt',\n            href: app.forum.attribute('backofficeUrl'),\n            external: true,\n        }, app.translator.trans('flamarkt-backoffice.lib.header.backoffice_button')));\n\n        // Add a separator between links and logout button, just like in the forum frontend\n        if (!items.has('separator')) {\n            items.add('separator', Separator.component(), -90);\n        }\n    });\n});\n\nregisterPatchInitializer();\n","import app from 'flarum/common/app';\nimport patchModelHasOneNull from './patchModelHasOneNull';\nimport patchStoreAllowVerbatimRelationships from './patchStoreAllowVerbatimRelationships';\n\nexport default function () {\n    // On one hand these need to run as early as possible because they need to override Model.hasOne which is used in other extension's extenders\n    // But priority might need to be adjusted because it need to run as late as possible for the null catch to be the most outward override and therefore runs before other overrides\n    app.initializers.add('flamarkt-backoffice-patch', () => {\n        patchModelHasOneNull();\n        patchStoreAllowVerbatimRelationships();\n    }, 100);\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\n/**\n * Fixes inability to use null hasOne relationships with Flarum javascript models\n * @see https://github.com/flarum/core/issues/2876\n */\nexport default function () {\n    // Allow passing null relationships in Model.prototype.save()\n    override(Model, 'getIdentifier' as any, function (original: (model: Model) => any, model: Model | any) {\n        if (!model) {\n            return null;\n        }\n\n        return original(model);\n    });\n\n    // Don't error if the data property exists on the relationship but is null\n    // null is allowed as per https://jsonapi.org/format/#document-resource-object-linkage\n    override(Model, 'hasOne', function (original: (name: string) => (() => any), name: string) {\n        return function (this: Model) {\n            if (this.data.relationships) {\n                const relationship = this.data.relationships[name];\n\n                if (relationship && !relationship.data) {\n                    // Flarum might use false here. The code only looks for falsy for now anyway\n                    return null;\n                }\n            }\n\n            return original(name).call(this);\n        };\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\n/**\n * The way Flarum parses relationships inside of the save() method prevents us from saving data alongside the relation\n * To work around this, we override this method that will allow us to pass down raw objects directly in the model during save\n * The same code is used in fof/taxonomies\n */\nexport default function () {\n    override(Model, 'getIdentifier' as any, function (original: (model: Model) => any, model: Model | any) {\n        // This is fixed by patchModelHasOneNull but we need to handle it here as well depending on the load order\n        if (!model) {\n            return null;\n        }\n\n        if (model.verbatim) {\n            delete model.verbatim;\n\n            return model;\n        }\n\n        return original(model);\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","override","ExtensionPage","original","this","extension","extra","settingsInBackoffice","m","href","id","extend","SessionDropdown","items","add","LinkButton","icon","external","has","Separator","Model","model","name","data","relationships","relationship","verbatim"],"sourceRoot":""}